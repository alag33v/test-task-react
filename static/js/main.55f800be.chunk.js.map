{"version":3,"sources":["redux/ticketsReducer.js","redux/rootReducer.js","assets/images/logo.PNG","styled/Logo.js","components/Logo.js","assets/images/check.svg","styled/Sidebar.js","components/Sidebar.js","styled/Main.js","components/Main.js","styled/Ticket.js","components/Ticket.js","styled/Choice.js","components/Choice.js","App.js","styled/GlobalStyle.js","reportWebVitals.js","index.js"],"names":["SET_TICKETS","initialState","tickets","rootReducer","combineReducers","state","action","type","payload","StyledLogo","styled","div","Logo","src","logo","alt","StyledSidebar","check","Sidebar","filter","setFilter","allHandler","checkboxFilter","tempFilter","Object","fromEntries","keys","map","current","some","key","every","className","onChange","checked","all","without","one","two","three","StyledMain","Main","useState","searchId","setSearchId","setTickets","stop","setStop","sortTickets","setSortTickets","lowprice","faster","sorterActive","setSorterActive","allSorter","useCallback","sort","a","b","price","segments","duration","filterTickets","ticketArr","stops","length","useEffect","slice","fetch","then","res","json","catch","err","console","log","subscribe","response","status","error","statusText","Promise","resolve","setTimeout","ticketsBundle","ticket","index","StyledTicket","Ticket","Card","Body","toString","split","reverse","reduce","accum","item","i","join","carrier","segment","destination","origin","Date","date","getHours","getMinutes","setHours","Math","ceil","setMinutes","StyledChoice","Choice","sorterHandler","sortedButton","onClick","App","Container","Row","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55f800be.chunk.js","sourcesContent":["// Actions\r\nconst SET_TICKETS = 'SET_TICKETS';\r\n\r\n// Reducer\r\nconst initialState = {\r\n  tickets: []\r\n};\r\n\r\nexport const ticketsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TICKETS:\r\n      return { ...state, tickets: [...state.tickets, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action Creators\r\nexport const setTickets = ticket => ({\r\n  type: SET_TICKETS,\r\n  payload: ticket\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { ticketsReducer } from './ticketsReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  tickets: ticketsReducer\r\n});\r\n","export default __webpack_public_path__ + \"static/media/logo.1da79cb6.PNG\";","import styled from 'styled-components';\r\n\r\nexport const StyledLogo = styled.div`\r\n  text-align: center;\r\n  img {\r\n    display: inline-block;\r\n    margin: 30px auto;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import logo from '../assets/images/logo.PNG';\r\nimport { StyledLogo } from '../styled/Logo';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <StyledLogo>\r\n      <img src={logo} alt='logo' />\r\n    </StyledLogo>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","export default __webpack_public_path__ + \"static/media/check.09eaa8c6.svg\";","import check from '../assets/images/check.svg';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledSidebar = styled.div`\r\n  width: 25%;\r\n  padding: 15px;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  border-radius: 0.25rem;\r\n  max-height: 334px;\r\n  h4 {\r\n    font-size: 16px;\r\n    text-transform: uppercase;\r\n    margin: 10px 0 22px;\r\n  }\r\n  label {\r\n    display: block;\r\n    margin-bottom: 22px;\r\n    padding-left: 35px;\r\n    cursor: pointer;\r\n  }\r\n  strong {\r\n    font-weight: 400;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #212529;\r\n  }\r\n  .checkbox {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    overflow: hidden;\r\n    clip: rect(0 0 0 0);\r\n    padding-left: 20px;\r\n  }\r\n  .check-style {\r\n    width: 22px;\r\n    height: 22px;\r\n    border: 1px solid #bcd2de;\r\n    border-radius: 2px;\r\n    position: absolute;\r\n    margin-left: -35px;\r\n  }\r\n  .checkbox:checked + .check-style {\r\n    border: 1px solid #39a1f4;\r\n  }\r\n  .checkbox:checked + .check-style::before {\r\n    content: '';\r\n    width: 14px;\r\n    height: 14px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: url(${check});\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    position: absolute;\r\n  }\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n  @media (max-width: 600px) {\r\n    width: 95%;\r\n    max-width: 100%;\r\n    margin: 0 auto 20px;\r\n  }\r\n`;\r\n","import { StyledSidebar } from '../styled/Sidebar';\r\n\r\nconst Sidebar = ({ filter, setFilter }) => {\r\n  const allHandler = checkboxFilter => {\r\n    let tempFilter = { ...filter };\r\n    tempFilter[checkboxFilter] = !tempFilter[checkboxFilter];\r\n    if (checkboxFilter === 'all') {\r\n      tempFilter = Object.fromEntries(\r\n        Object.keys(tempFilter).map(current => {\r\n          return [current, tempFilter[checkboxFilter]];\r\n        })\r\n      );\r\n    } else {\r\n      if (Object.keys(tempFilter).some(key => tempFilter[key] === false)) {\r\n        tempFilter['all'] = false;\r\n      }\r\n      if (\r\n        Object.keys(tempFilter).every(key => {\r\n          if (key === 'all') return true;\r\n          return tempFilter[key] === true;\r\n        })\r\n      ) {\r\n        tempFilter['all'] = true;\r\n      }\r\n    }\r\n    setFilter({ ...tempFilter });\r\n  };\r\n\r\n  return (\r\n    <StyledSidebar>\r\n      <h4>Количество пересадок</h4>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('all')}\r\n          checked={filter.all}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>Все</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('without')}\r\n          checked={filter.without}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>Без пересадок</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('one')}\r\n          checked={filter.one}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>1 пересадка</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('two')}\r\n          checked={filter.two}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>2 пересадки</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('three')}\r\n          checked={filter.three}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>3 пересадки</strong>\r\n      </label>\r\n    </StyledSidebar>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.div`\r\n  width: 73%;\r\n  margin-left: 2%;\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    margin-left: 0;\r\n  }\r\n  @media (max-width: 600px) {\r\n    width: 95%;\r\n    max-width: 100%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Choice } from './index';\r\nimport { Ticket } from './index';\r\nimport { StyledMain } from '../styled/Main';\r\n\r\nconst Main = ({ filter }) => {\r\n  // Here we store id from API\r\n  const [searchId, setSearchId] = useState();\r\n  // Here we store all tickets\r\n  const [tickets, setTickets] = useState([]);\r\n  // Checking the response from the server, if true we stop\r\n  const [stop, setStop] = useState(false);\r\n  // Here we sort 5 tickets\r\n  const [sortTickets, setSortTickets] = useState([]);\r\n  // Sort tickets depending on the conditions\r\n  const [sorterActive, setSorterActive] = useState({\r\n    lowprice: true,\r\n    faster: false\r\n  });\r\n\r\n  const allSorter = useCallback(\r\n    tickets => {\r\n      // Sorting tickets by price\r\n      if (sorterActive.lowprice) {\r\n        return tickets.sort((a, b) => a.price - b.price);\r\n      }\r\n      // Sorting tickets by duration\r\n      if (sorterActive.faster) {\r\n        return tickets.sort(\r\n          (a, b) =>\r\n            a.segments[0].duration +\r\n            a.segments[1].duration -\r\n            (b.segments[0].duration + b.segments[1].duration)\r\n        );\r\n      }\r\n      return tickets;\r\n    },\r\n    [sorterActive]\r\n  );\r\n\r\n  // Sort according to the selected checkbox\r\n  const filterTickets = useCallback(\r\n    ticketArr => {\r\n      if (\r\n        Object.keys(filter).every(key => {\r\n          return filter[key] === false;\r\n        })\r\n      ) {\r\n        return ticketArr;\r\n      }\r\n      return ticketArr.filter(current => {\r\n        if (filter.all) return current;\r\n        if (\r\n          filter.without &&\r\n          current.segments[0].stops.length === 0 &&\r\n          current.segments[1].stops.length === 0\r\n        )\r\n          return true;\r\n        if (\r\n          filter.one &&\r\n          current.segments[0].stops.length === 1 &&\r\n          current.segments[1].stops.length === 1\r\n        )\r\n          return true;\r\n        if (\r\n          filter.two &&\r\n          current.segments[0].stops.length === 2 &&\r\n          current.segments[1].stops.length === 2\r\n        )\r\n          return true;\r\n        if (\r\n          filter.three &&\r\n          current.segments[0].stops.length === 3 &&\r\n          current.segments[1].stops.length === 3\r\n        )\r\n          return true;\r\n        return false;\r\n      });\r\n    },\r\n    [filter]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (stop === true) {\r\n      // Leave only five tickets and we sort depending on conditions\r\n      setSortTickets(allSorter(filterTickets(tickets)).slice(0, 5));\r\n    }\r\n  }, [stop, tickets, sorterActive, allSorter, filterTickets]);\r\n\r\n  useEffect(() => {\r\n    // Get the searchId\r\n    fetch('https://front-test.beta.aviasales.ru/search')\r\n      .then(res => res.json())\r\n      .then(res => setSearchId(res.searchId))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchId && stop === false) {\r\n      async function subscribe() {\r\n        // Get unsorted ticket lists\r\n        let response = await fetch(\r\n          `https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`\r\n        );\r\n        // Handling the 500 error\r\n        if (response.status === 500) {\r\n          await subscribe();\r\n          // Handling the 404 error\r\n        } else if (response.status === 404) {\r\n          // Processing if the response is not 200\r\n        } else if (response.status !== 200) {\r\n          console.error(response.statusText);\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          await subscribe();\r\n          // If response 200\r\n        } else {\r\n          let ticketsBundle = await response.json();\r\n          if (ticketsBundle.stop) {\r\n            setStop(true);\r\n          }\r\n          // We collect all tickets in a bunch\r\n          setTickets([...tickets, ...ticketsBundle.tickets]);\r\n        }\r\n      }\r\n      subscribe();\r\n    }\r\n  }, [searchId, tickets, stop]);\r\n\r\n  return (\r\n    <StyledMain>\r\n      <Choice sorterActive={sorterActive} setSorterActive={setSorterActive} />\r\n      {sortTickets.map((ticket, index) => (\r\n        <Ticket ticket={ticket} key={index} />\r\n      ))}\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTicket = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  .card {\r\n    width: 100%;\r\n    margin: 20px 0;\r\n    padding: 0 15px;\r\n  }\r\n  .card-title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .cost {\r\n    font-size: 30px;\r\n    color: #2196f3;\r\n  }\r\n  img {\r\n    display: block;\r\n    max-width: 100%;\r\n    object-fit: cover;\r\n  }\r\n  .wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: space-between;\r\n  }\r\n  .ticket-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 15px 0;\r\n  }\r\n  .up {\r\n    color: #aebcc3;\r\n  }\r\n  .bottom {\r\n    color: #707070;\r\n  }\r\n  span {\r\n    display: block;\r\n  }\r\n  @media (max-width: 500px) {\r\n    .card-body {\r\n      padding: 0;\r\n    }\r\n  }\r\n  @media (max-width: 400px) {\r\n    .cost {\r\n      font-size: 26px;\r\n    }\r\n    img {\r\n      width: 140px;\r\n    }\r\n    .ticket-info {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n","import { Card } from 'react-bootstrap';\r\nimport { StyledTicket } from '../styled/Ticket';\r\n\r\nconst Ticket = ({ ticket }) => {\r\n  return (\r\n    <StyledTicket>\r\n      <Card>\r\n        <Card.Body>\r\n          <div className='card-title'>\r\n            <strong className='cost'>\r\n              {ticket.price\r\n                .toString()\r\n                .split('')\r\n                .reverse()\r\n                .reduce((accum, item, i) => {\r\n                  if (i % 3 === 0) {\r\n                    return item + ' ' + accum;\r\n                  }\r\n                  return item + accum;\r\n                }, 'P ')\r\n                .split('')\r\n                .join('')}\r\n            </strong>\r\n            <img src={`//pics.avs.io/99/36/${ticket.carrier}.png`} alt='' />\r\n          </div>\r\n          <div className='wrapper'>\r\n            {ticket.segments.map((segment, index) => (\r\n              <div className='ticket-info' key={index}>\r\n                <div>\r\n                  <span className='up'>{`${segment.destination} - ${segment.origin}`}</span>\r\n                  <span className='bottom'>\r\n                    {new Date(segment.date).getHours() +\r\n                      ':' +\r\n                      new Date(segment.date).getMinutes() +\r\n                      ' - ' +\r\n                      new Date(\r\n                        new Date(segment.date).setHours(\r\n                          new Date(segment.date).getHours() +\r\n                            Math.ceil(segment.duration / 60)\r\n                        )\r\n                      ).getHours() +\r\n                      ':' +\r\n                      new Date(\r\n                        new Date(segment.date).setMinutes(\r\n                          new Date(segment.date).getMinutes() + segment.duration\r\n                        )\r\n                      ).getMinutes()}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className='up'>В пути</span>\r\n                  <span className='bottom'>\r\n                    {Math.ceil(segment.duration / 60) +\r\n                      ':' +\r\n                      (segment.duration % 60)}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className='up'>\r\n                    {segment.stops.length === 0\r\n                      ? 'Без пересадок'\r\n                      : segment.stops.length === 1\r\n                      ? '1 пересадка'\r\n                      : segment.stops.length >= 2\r\n                      ? `${segment.stops.length} пересадки`\r\n                      : ''}\r\n                  </span>\r\n                  <span className='bottom'>{segment.stops.join(', ')}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </StyledTicket>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledChoice = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  button {\r\n    width: 50%;\r\n    height: 60px;\r\n  }\r\n  .button {\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    text-align: center;\r\n    color: #000;\r\n    background-color: rgb(255, 255, 255);\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    border-radius: 0.25rem;\r\n    display: inline-block;\r\n    padding: 0.375rem 0.75rem;\r\n    transition: 0.3s linear;\r\n    outline: none;\r\n    &:hover {\r\n      background-color: rgb(228, 228, 228);\r\n    }\r\n    &:active {\r\n      background-color: rgb(207, 207, 207);\r\n    }\r\n  }\r\n  .btn-light {\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n  }\r\n  .lowprice,\r\n  .faster {\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    &:hover {\r\n      background-color: #025bc2;\r\n    }\r\n    &:active {\r\n      background-color: #004aa0;\r\n    }\r\n  }\r\n`;\r\n","import { useCallback } from 'react';\r\nimport { StyledChoice } from '../styled/Choice';\r\n\r\nconst Choice = ({ sorterActive, setSorterActive }) => {\r\n  const sorterHandler = useCallback(\r\n    sortedButton => {\r\n      // If true we exit\r\n      if (sorterActive[sortedButton]) return;\r\n      // Change buttons class\r\n      setSorterActive({\r\n        lowprice: !sorterActive['lowprice'],\r\n        faster: !sorterActive['faster']\r\n      });\r\n    },\r\n    [sorterActive, setSorterActive]\r\n  );\r\n\r\n  return (\r\n    <StyledChoice>\r\n      <button\r\n        className={`button ${sorterActive.lowprice ? 'lowprice' : ''}`}\r\n        onClick={() => sorterHandler('lowprice')}\r\n      >\r\n        Самый дешевый\r\n      </button>\r\n      <button\r\n        className={`button ${sorterActive.faster ? 'faster' : ''}`}\r\n        onClick={() => sorterHandler('faster')}\r\n      >\r\n        Самый быстрый\r\n      </button>\r\n    </StyledChoice>\r\n  );\r\n};\r\n\r\nexport default Choice;\r\n","import { useState } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Logo } from './components/index';\r\nimport { Sidebar } from './components/index';\r\nimport { Main } from './components/index';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nconst App = () => {\r\n  // All checkboxes status\r\n  const [filter, setFilter] = useState({\r\n    all: true,\r\n    without: true,\r\n    one: true,\r\n    two: true,\r\n    three: true\r\n  });\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Container>\r\n        <Logo />\r\n        <Row>\r\n          <Sidebar filter={filter} setFilter={setFilter} />\r\n          <Main filter={filter} setFilter={setFilter} />\r\n        </Row>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Open Sans', sans-serif;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  margin-top: 25px;\r\n  background-color: #F3F7FA;\r\n  min-height: 100vh;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  .row {\r\n    flex-direction: column;\r\n  }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './redux/rootReducer';\r\nimport App from './App';\r\nimport GlobalStyle from './styled/GlobalStyle';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <GlobalStyle />\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}