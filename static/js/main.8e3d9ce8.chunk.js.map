{"version":3,"sources":["assets/images/logo.PNG","styled/Logo.js","components/Logo.js","assets/images/check.svg","styled/Sidebar.js","components/Sidebar.js","styled/Main.js","components/Main.js","styled/Ticket.js","components/TicketHelper.js","components/Ticket.js","styled/Choice.js","components/Choice.js","App.js","styled/GlobalStyle.js","reportWebVitals.js","index.js"],"names":["StyledLogo","styled","div","Logo","src","logo","alt","StyledSidebar","check","Sidebar","filter","setFilter","allHandler","checkboxFilter","tempFilter","Object","fromEntries","keys","map","current","some","key","every","className","type","onChange","checked","all","without","one","two","three","StyledMain","Main","useState","searchId","setSearchId","tickets","setTickets","stop","setStop","sortTickets","setSortTickets","lowprice","faster","sorterActive","setSorterActive","allSorter","useCallback","sort","a","b","price","segments","duration","filterTickets","ticketArr","stops","length","useEffect","slice","fetch","then","res","json","catch","err","console","log","subscribe","response","status","error","statusText","Promise","resolve","setTimeout","ticketsBundle","ticket","index","StyledTicket","hours","rhours","Math","floor","minutes","rminutes","round","departureArrivalTime","dateFromProps","durat","date","Date","setTime","getTime","datePlusDuration","departureTimeHours","getUTCHours","departureTimeMinutes","getUTCMinutes","departureTime","ArrivalTimeHours","ArrivalTimeMinutes","ArrivalTime","stopsText","props","Ticket","Card","Body","toString","replace","carrier","origin","destination","join","StyledChoice","Choice","sorterHandler","sortedButton","onClick","App","Container","Row","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e3d9ce8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1da79cb6.PNG\";","import styled from 'styled-components';\r\n\r\nexport const StyledLogo = styled.div`\r\n  text-align: center;\r\n  img {\r\n    display: inline-block;\r\n    margin: 30px auto;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import logo from '../assets/images/logo.PNG';\r\nimport { StyledLogo } from '../styled/Logo';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <StyledLogo>\r\n      <img src={logo} alt='logo' />\r\n    </StyledLogo>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","export default __webpack_public_path__ + \"static/media/check.09eaa8c6.svg\";","import check from '../assets/images/check.svg';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledSidebar = styled.div`\r\n  width: 25%;\r\n  padding: 15px;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  border-radius: 0.25rem;\r\n  max-height: 334px;\r\n  h4 {\r\n    font-size: 16px;\r\n    text-transform: uppercase;\r\n    margin: 10px 0 22px;\r\n  }\r\n  label {\r\n    display: block;\r\n    margin-bottom: 22px;\r\n    padding-left: 35px;\r\n    cursor: pointer;\r\n  }\r\n  strong {\r\n    font-weight: 400;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #212529;\r\n  }\r\n  .checkbox {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    overflow: hidden;\r\n    clip: rect(0 0 0 0);\r\n    padding-left: 20px;\r\n  }\r\n  .check-style {\r\n    width: 22px;\r\n    height: 22px;\r\n    border: 1px solid #bcd2de;\r\n    border-radius: 2px;\r\n    position: absolute;\r\n    margin-left: -35px;\r\n  }\r\n  .checkbox:checked + .check-style {\r\n    border: 1px solid #39a1f4;\r\n  }\r\n  .checkbox:checked + .check-style::before {\r\n    content: '';\r\n    width: 14px;\r\n    height: 14px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: url(${check});\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    position: absolute;\r\n  }\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n  @media (max-width: 600px) {\r\n    width: 95%;\r\n    max-width: 100%;\r\n    margin: 0 auto 20px;\r\n  }\r\n`;\r\n","import { StyledSidebar } from '../styled/Sidebar';\r\n\r\nconst Sidebar = ({ filter, setFilter }) => {\r\n  const allHandler = checkboxFilter => {\r\n    let tempFilter = { ...filter };\r\n    tempFilter[checkboxFilter] = !tempFilter[checkboxFilter];\r\n    if (checkboxFilter === 'all') {\r\n      tempFilter = Object.fromEntries(\r\n        Object.keys(tempFilter).map(current => {\r\n          return [current, tempFilter[checkboxFilter]];\r\n        })\r\n      );\r\n    } else {\r\n      if (Object.keys(tempFilter).some(key => tempFilter[key] === false)) {\r\n        tempFilter['all'] = false;\r\n      }\r\n      if (\r\n        Object.keys(tempFilter).every(key => {\r\n          if (key === 'all') return true;\r\n          return tempFilter[key] === true;\r\n        })\r\n      ) {\r\n        tempFilter['all'] = true;\r\n      }\r\n    }\r\n    setFilter({ ...tempFilter });\r\n  };\r\n\r\n  return (\r\n    <StyledSidebar>\r\n      <h4>Количество пересадок</h4>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('all')}\r\n          checked={filter.all}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>Все</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('without')}\r\n          checked={filter.without}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>Без пересадок</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('one')}\r\n          checked={filter.one}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>1 пересадка</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('two')}\r\n          checked={filter.two}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>2 пересадки</strong>\r\n      </label>\r\n      <label>\r\n        <input\r\n          className='checkbox'\r\n          type='checkbox'\r\n          onChange={() => allHandler('three')}\r\n          checked={filter.three}\r\n        />\r\n        <span className='check-style' />\r\n        <strong>3 пересадки</strong>\r\n      </label>\r\n    </StyledSidebar>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.div`\r\n  width: 73%;\r\n  margin-left: 2%;\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    margin-left: 0;\r\n  }\r\n  @media (max-width: 600px) {\r\n    width: 95%;\r\n    max-width: 100%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Choice } from './index';\r\nimport { Ticket } from './index';\r\nimport { StyledMain } from '../styled/Main';\r\n\r\nconst Main = ({ filter }) => {\r\n  // Here we store id from API\r\n  const [searchId, setSearchId] = useState();\r\n  // Here we store all tickets\r\n  const [tickets, setTickets] = useState([]);\r\n  // Checking the response from the server, if true we stop\r\n  const [stop, setStop] = useState(false);\r\n  // Here we sort 5 tickets\r\n  const [sortTickets, setSortTickets] = useState([]);\r\n  // Sort tickets depending on the conditions\r\n  const [sorterActive, setSorterActive] = useState({\r\n    lowprice: true,\r\n    faster: false\r\n  });\r\n\r\n  const allSorter = useCallback(\r\n    tickets => {\r\n      // Sorting tickets by price\r\n      if (sorterActive.lowprice) {\r\n        return tickets.sort((a, b) => a.price - b.price);\r\n      }\r\n      // Sorting tickets by duration\r\n      if (sorterActive.faster) {\r\n        return tickets.sort(\r\n          (a, b) =>\r\n            a.segments[0].duration +\r\n            a.segments[1].duration -\r\n            (b.segments[0].duration + b.segments[1].duration)\r\n        );\r\n      }\r\n      return tickets;\r\n    },\r\n    [sorterActive]\r\n  );\r\n\r\n  // Sort according to the selected checkbox\r\n  const filterTickets = useCallback(\r\n    ticketArr => {\r\n      if (\r\n        Object.keys(filter).every(key => {\r\n          return filter[key] === false;\r\n        })\r\n      ) {\r\n        return ticketArr;\r\n      }\r\n      return ticketArr.filter(current => {\r\n        if (filter.all) return current;\r\n        if (\r\n          filter.without &&\r\n          current.segments[0].stops.length === 0 &&\r\n          current.segments[1].stops.length === 0\r\n        )\r\n          return true;\r\n        if (\r\n          filter.one &&\r\n          current.segments[0].stops.length === 1 &&\r\n          current.segments[1].stops.length === 1\r\n        )\r\n          return true;\r\n        if (\r\n          filter.two &&\r\n          current.segments[0].stops.length === 2 &&\r\n          current.segments[1].stops.length === 2\r\n        )\r\n          return true;\r\n        if (\r\n          filter.three &&\r\n          current.segments[0].stops.length === 3 &&\r\n          current.segments[1].stops.length === 3\r\n        )\r\n          return true;\r\n        return false;\r\n      });\r\n    },\r\n    [filter]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (stop === true) {\r\n      // Leave only five tickets and we sort depending on conditions\r\n      setSortTickets(allSorter(filterTickets(tickets)).slice(0, 5));\r\n    }\r\n  }, [stop, tickets, sorterActive, allSorter, filterTickets]);\r\n\r\n  useEffect(() => {\r\n    // Get the searchId\r\n    fetch('https://front-test.beta.aviasales.ru/search')\r\n      .then(res => res.json())\r\n      .then(res => setSearchId(res.searchId))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchId && stop === false) {\r\n      async function subscribe() {\r\n        // Get unsorted ticket lists\r\n        let response = await fetch(\r\n          `https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`\r\n        );\r\n        // Handling the 500 error\r\n        if (response.status === 500) {\r\n          await subscribe();\r\n          // Handling the 404 error\r\n        } else if (response.status === 404) {\r\n          // Processing if the response is not 200\r\n        } else if (response.status !== 200) {\r\n          console.error(response.statusText);\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          await subscribe();\r\n          // If response 200\r\n        } else {\r\n          let ticketsBundle = await response.json();\r\n          if (ticketsBundle.stop) {\r\n            setStop(true);\r\n          }\r\n          // We collect all tickets in a bunch\r\n          setTickets([...tickets, ...ticketsBundle.tickets]);\r\n        }\r\n      }\r\n      subscribe();\r\n    }\r\n  }, [searchId, tickets, stop]);\r\n\r\n  return (\r\n    <StyledMain>\r\n      <Choice sorterActive={sorterActive} setSorterActive={setSorterActive} />\r\n      {sortTickets.map((ticket, index) => (\r\n        <Ticket ticket={ticket} key={index} />\r\n      ))}\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTicket = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  .card {\r\n    width: 100%;\r\n    margin: 20px 0;\r\n    padding: 0 10px;\r\n  }\r\n  .card-body {\r\n    padding-bottom: 10px;\r\n  }\r\n  .card-title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .cost {\r\n    font-size: 30px;\r\n    color: #2196f3;\r\n  }\r\n  img {\r\n    display: block;\r\n    max-width: 100%;\r\n    object-fit: cover;\r\n  }\r\n  .wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: space-between;\r\n  }\r\n  .ticket-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 15px 0;\r\n    &__last {\r\n      width: 110px;\r\n    }\r\n  }\r\n  .up {\r\n    color: #aebcc3;\r\n  }\r\n  .bottom {\r\n    color: #707070;\r\n  }\r\n  span {\r\n    display: block;\r\n  }\r\n  @media (max-width: 500px) {\r\n    .card-body {\r\n      padding: 10px 0;\r\n    }\r\n    .cost {\r\n      font-size: 26px;\r\n    }\r\n  }\r\n  @media (max-width: 400px) {\r\n    .cost {\r\n      font-size: 26px;\r\n    }\r\n    .ticket-info {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n","// Price\r\nexport const priceConverter = price =>\r\n  (price = `${price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')} ₽`);\r\n\r\n// On the way\r\nexport const duration = duration => {\r\n  const num = duration;\r\n  const hours = num / 60;\r\n  let rhours = Math.floor(hours);\r\n  rhours = rhours > 9 ? rhours : `0${rhours}`;\r\n  const minutes = (hours - rhours) * 60;\r\n  let rminutes = Math.round(minutes);\r\n  rminutes = rminutes > 9 ? rminutes : `0${rminutes}`;\r\n  return `${rhours}ч ${rminutes}м`;\r\n};\r\n\r\n// Departure time and Arrival time\r\nexport const departureArrivalTime = (dateFromProps, durat) => {\r\n  const date = new Date(dateFromProps);\r\n  date.setTime(date.getTime() + 3 * 60 * 60 * 1000);\r\n  const datePlusDuration = date.getTime() + durat * 60000;\r\n\r\n  let departureTimeHours =\r\n    date.getUTCHours() > 9 ? date.getUTCHours() : `0${date.getUTCHours()}`;\r\n  let departureTimeMinutes =\r\n    date.getUTCMinutes() > 9\r\n      ? date.getUTCMinutes()\r\n      : `0${date.getUTCMinutes()}`;\r\n  const departureTime = `${departureTimeHours}:${departureTimeMinutes}`;\r\n\r\n  let ArrivalTimeHours =\r\n    new Date(datePlusDuration).getUTCHours() > 9\r\n      ? new Date(datePlusDuration).getUTCHours()\r\n      : `0${new Date(datePlusDuration).getUTCHours()}`;\r\n  let ArrivalTimeMinutes =\r\n    new Date(datePlusDuration).getUTCMinutes() > 9\r\n      ? new Date(datePlusDuration).getUTCMinutes()\r\n      : `0${new Date(datePlusDuration).getUTCMinutes()}`;\r\n  const ArrivalTime = `${ArrivalTimeHours}:${ArrivalTimeMinutes}`;\r\n\r\n  const result = `${departureTime} – ${ArrivalTime}`;\r\n\r\n  return result;\r\n};\r\n\r\n// Number of stops\r\nexport const stopsText = props => {\r\n  if (props.length === 0) {\r\n    return '0 пересадок';\r\n  } else if (props.length === 1) {\r\n    return '1 пересадка';\r\n  }\r\n  return `${props.length} пересадки`;\r\n};\r\n","import { Card } from 'react-bootstrap';\r\nimport { StyledTicket } from '../styled/Ticket';\r\nimport {\r\n  priceConverter,\r\n  duration,\r\n  departureArrivalTime,\r\n  stopsText\r\n} from './TicketHelper';\r\n\r\nconst Ticket = ({ ticket }) => {\r\n  return (\r\n    <StyledTicket>\r\n      <Card>\r\n        <Card.Body>\r\n          <div className='card-title'>\r\n            <strong className='cost'>{priceConverter(ticket.price)}</strong>\r\n            <img src={`//pics.avs.io/99/36/${ticket.carrier}.png`} alt='' />\r\n          </div>\r\n          <div className='wrapper'>\r\n            <div className='ticket-info'>\r\n              <div>\r\n                <span className='up'>{`${ticket.segments[0].origin} - ${ticket.segments[0].destination}`}</span>\r\n                <span className='bottom'>\r\n                  {departureArrivalTime(\r\n                    ticket.segments[0].date,\r\n                    ticket.segments[0].duration\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span className='up'>В пути</span>\r\n                <span className='bottom'>\r\n                  {duration(ticket.segments[0].duration)}\r\n                </span>\r\n              </div>\r\n              <div className='ticket-info__last'>\r\n                <span className='up'>\r\n                  {stopsText(ticket.segments[0].stops)}\r\n                </span>\r\n                <span className='bottom'>\r\n                  {[...ticket.segments[0].stops].join(', ')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className='ticket-info'>\r\n              <div>\r\n                <span className='up'>{`${ticket.segments[1].origin} - ${ticket.segments[1].destination}`}</span>\r\n                <span className='bottom'>\r\n                  {departureArrivalTime(\r\n                    ticket.segments[1].date,\r\n                    ticket.segments[1].duration\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span className='up'>В пути</span>\r\n                <span className='bottom'>\r\n                  {duration(ticket.segments[1].duration)}\r\n                </span>\r\n              </div>\r\n              <div className='ticket-info__last'>\r\n                <span className='up'>\r\n                  {stopsText(ticket.segments[1].stops)}\r\n                </span>\r\n                <span className='bottom'>\r\n                  {[...ticket.segments[1].stops].join(', ')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </StyledTicket>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledChoice = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  button {\r\n    width: 50%;\r\n    height: 60px;\r\n  }\r\n  .button {\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    text-align: center;\r\n    color: #000;\r\n    background-color: rgb(255, 255, 255);\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    border-radius: 0.25rem;\r\n    display: inline-block;\r\n    padding: 0.375rem 0.75rem;\r\n    transition: 0.3s linear;\r\n    outline: none;\r\n    &:hover {\r\n      background-color: rgb(228, 228, 228);\r\n    }\r\n    &:active {\r\n      background-color: rgb(207, 207, 207);\r\n    }\r\n  }\r\n  .btn-light {\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n  }\r\n  .lowprice,\r\n  .faster {\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    &:hover {\r\n      background-color: #025bc2;\r\n    }\r\n    &:active {\r\n      background-color: #004aa0;\r\n    }\r\n  }\r\n`;\r\n","import { useCallback } from 'react';\r\nimport { StyledChoice } from '../styled/Choice';\r\n\r\nconst Choice = ({ sorterActive, setSorterActive }) => {\r\n  const sorterHandler = useCallback(\r\n    sortedButton => {\r\n      // If true we exit\r\n      if (sorterActive[sortedButton]) return;\r\n      // Change buttons class\r\n      setSorterActive({\r\n        lowprice: !sorterActive['lowprice'],\r\n        faster: !sorterActive['faster']\r\n      });\r\n    },\r\n    [sorterActive, setSorterActive]\r\n  );\r\n\r\n  return (\r\n    <StyledChoice>\r\n      <button\r\n        className={`button ${sorterActive.lowprice ? 'lowprice' : ''}`}\r\n        onClick={() => sorterHandler('lowprice')}\r\n      >\r\n        Самый дешевый\r\n      </button>\r\n      <button\r\n        className={`button ${sorterActive.faster ? 'faster' : ''}`}\r\n        onClick={() => sorterHandler('faster')}\r\n      >\r\n        Самый быстрый\r\n      </button>\r\n    </StyledChoice>\r\n  );\r\n};\r\n\r\nexport default Choice;\r\n","import { useState } from 'react';\r\nimport { Logo } from './components/index';\r\nimport { Sidebar } from './components/index';\r\nimport { Main } from './components/index';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nconst App = () => {\r\n  // All checkboxes status\r\n  const [filter, setFilter] = useState({\r\n    all: true,\r\n    without: true,\r\n    one: true,\r\n    two: true,\r\n    three: true\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Logo />\r\n      <Row>\r\n        <Sidebar filter={filter} setFilter={setFilter} />\r\n        <Main filter={filter} setFilter={setFilter} />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Open Sans', sans-serif;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  margin-top: 25px;\r\n  background-color: #F3F7FA;\r\n  min-height: 100vh;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  .row {\r\n    flex-direction: column;\r\n  }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport GlobalStyle from './styled/GlobalStyle';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}